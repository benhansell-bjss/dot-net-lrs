@using System.Globalization
@inherits InputBase<string>

<div class="border w-full rounded text-2xl border-gray-500 mb-1 flex">
    <input type="@(showPassword ? "text" : "password")" class="w-full" 
           autocapitalize="none"
           autocorrect="none"
           spellcheck="false"
           inputmode="verbatim"
           autocomplete="off"
           @attributes="AdditionalAttributes" />
    <button class="flex-auto" @onclick="ToggleShowPassword">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path class="heroicon-ui" d="M17.56 17.66a8 8 0 0 1-11.32 0L1.3 12.7a1 1 0 0 1 0-1.42l4.95-4.95a8 8 0 0 1 11.32 0l4.95 4.95a1 1 0 0 1 0 1.42l-4.95 4.95zm-9.9-1.42a6 6 0 0 0 8.48 0L20.38 12l-4.24-4.24a6 6 0 0 0-8.48 0L3.4 12l4.25 4.24zM11.9 16a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm0-2a2 2 0 1 0 0-4 2 2 0 0 0 0 4z" /></svg>
    </button>
</div>

@code {
    private bool showPassword;

    [Parameter]
    public EventCallback<string> PasswordChanged { get; set; }

    private void ToggleShowPassword()
    {
        showPassword = !showPassword;
    }

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        var success = BindConverter.TryConvertTo<string>(value, CultureInfo.CurrentCulture, out var parsedValue);
        if (success)
        {
            result = parsedValue;
            validationErrorMessage = null;

            return true;
        }
        else
        {
            result = default;
            validationErrorMessage = $"{FieldIdentifier.FieldName} field isn't valid.";

            return false;
        }
    }
}